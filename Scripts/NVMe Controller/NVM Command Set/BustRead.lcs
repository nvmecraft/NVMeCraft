NVMeDevice dev;
Serilog.Core.Logger log;

int iops = 0;

public int ScriptMain(int a, int b)
{
    dev = FromEngine.dev;
    log = FromEngine.log;
    
    if(dev.NVMeDeviceEnabled == false)
    {
        Console.WriteLine("NVMe Device is disabled.");
        return 1;
    }
    if(dev.NVMeControllerEnabled == false)
    {
        Console.WriteLine("NVMe Controller is disabled.");
        return 1;
    }
    
    if(dev.NVMeAdminQueueReady == false)
    {
        Console.WriteLine("Admin Queue is not ready.");
        return 1;
    }

    Task Q1 = Task.Run(() => {ReadTest(1);});
    //Task Q2 = Task.Run(() => {ReadTest(2);});
    
    while(true)
    {
        Thread.Sleep(1000);
        if(FromEngine.ShouldQuit == true)
            break;
        
        Console.WriteLine("IOPS = {0}", iops);
        iops = 0;
    }
    
    return 0;
}

public void ReadTest(int q)
{
    int qid = q;
    UInt32 nsId = 1;
    UInt64 startLba = 0;
    UInt16 nlb = 16;
    
    Random randlba = new Random();
    //Random randNlb = new Random();
    
    dev.PresettingIoQueueDataPointer(q, nlb);
    
    while(true)
    {
        //startLba = (UInt64)randlba.Next(100);
        //nlb = (UInt16)randNlb.Next(1, 64);
        
        IO_COMMAND_SQE ioSqe = BuildNvmReadSqe(nsId, startLba, nlb);
        //DataPointer dp = new DataPointer(dev, nlb * 512, false);
        
        //ioSqe.PRP1 = dp.Prp1;
        //ioSqe.PRP2 = dp.Prp2;
        
        //dev.SubmitIoCommand(qid, ioSqe, dp);
        dev.SubmitIoCommand(qid, ioSqe, null);
        iops++;
        
        if(FromEngine.ShouldQuit == true)
            break;
    }
}


public IO_COMMAND_SQE BuildNvmReadSqe(UInt32 nsId, UInt64 startingLba, UInt16 nlb)
{
    IO_COMMAND_SQE ioSqe = new IO_COMMAND_SQE();
    ioSqe.ClearSqe();
    
    ioSqe.OPC = 0x02; //(byte)EnumIoOpcode.Read;
    ioSqe.NSID = nsId;
    ioSqe.CDW10 = (UInt32)startingLba;
    ioSqe.CDW11 = (UInt32)(startingLba>>32);
    
    ioSqe.CDW12 &= 0xFFFF0000;
    ioSqe.CDW12 |= (UInt32)(nlb - 1);
    
    return ioSqe;
}

