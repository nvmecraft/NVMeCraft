NVMeDevice dev;
Serilog.Core.Logger log;

public int ScriptMain(int a, int b)
{
    dev = FromEngine.dev;
    log = FromEngine.log;
    
    log.Information("CAP.TO - Test Start");
    
    log.Information("CAP.TO - Setup Precondition");
    SetupPreCondition();
    
    UInt64 CAP_TO = dev.controllerRegs.CAP.TO;
    log.Information("CAP.TO - 0x{0:X2}, The worst case timeout is {1} millisecond.", CAP_TO, CAP_TO * 500);
    
    System.Diagnostics.Stopwatch sw = new System.Diagnostics.Stopwatch();

    log.Information("CAP.TO - CC.EN = 0");
    dev.controllerRegs.CC.EN = 0;;
    sw.Start();
    while(true)
    {
        Thread.Sleep(10);
        if(dev.controllerRegs.CSTS.RDY == 0)
        {
            sw.Stop();
            log.Information("CAP.TO - CSTS.RDY = 0, Elapsed Time is {0}", sw.ElapsedMilliseconds.ToString());
            break;
        }
        
        if(sw.ElapsedMilliseconds > (Int64)(CAP_TO * 500))
        {
            sw.Stop();
            log.Information("CAP.TO - Timeout occured. {0}", sw.ElapsedMilliseconds.ToString());
            break;
        }
    }
    
    log.Information("CAP.TO - CC.EN = 1");
    sw.Reset();
    
    dev.controllerRegs.CC.EN = 1;
    sw.Start();
    
    while(true)
    {
        Thread.Sleep(10);
        if(dev.controllerRegs.CSTS.RDY == 1)
        {
            sw.Stop();
            log.Information("CAP.TO - CSTS.RDY = 1, Elapsed Time is {0}", sw.ElapsedMilliseconds.ToString());
            break;
        }
        
        if(sw.ElapsedMilliseconds > (Int64)(CAP_TO * 500))
        {
            sw.Stop();
            log.Information("CAP.TO - Timeout occured. {0}", sw.ElapsedMilliseconds.ToString());
            break;
        }
    }
    
    log.Information("CAP.TO - Test Done");
   
    return 0;
}

public void SetupPreCondition()
{
    dev.Initialization(0x80, 0x80, 4, 0x100);
}
